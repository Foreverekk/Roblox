-- This file was generated using Luraph Obfuscator v13.5.5

return(function(nD,AD,XD,fD,SD,qD,YD,UD,GD,uD,OD,jD,wD,cD,eD,hD,HD,CD,rD,zD,xD,vD,ZD,ID,VD,DD,tD,PD,TD,ND,yD,LD,KD,FD,lD,g,...)local BD,X,WD=0,nil,nil;local E=(select);do while BD~=0X2 do if BD~=0X0000 then do WD=function(...)return E("#",...),{...};end;end;do BD=2;end;else X=0X00002^52;BD=1;end;end;end;local W=pcall;local p=(error);local H=0X80000000;BD=0;local m,i,a,Q,t,V,e=nil,nil,nil,nil,nil,nil,(nil);repeat if not(BD<=2)then do if BD<=0X4 then do if BD~=0X0003 then do V=table.insert;end;BD=1;else i=string.sub;BD=5;end;end;else do if BD==0X5 then a=eD.char;BD=6;else Q=rD;BD=2;end;end;end;end;elseif not(BD<=0x00000)then if BD~=0X001 then do t=eD.rep;end;BD=4;else e=VD;do break;end;end;else do m=tD;end;BD=3;end;until false;local w=(rawget);local q=(next);local f=(1);do BD=0x1;end;local A,u=nil,(nil);do repeat if not(BD<=0x00)then if BD~=0x1 then do u=CD.yield;end;BD=0;elsedo BD=2;end;end;else break;end;until false;end;local T,U=getfenv,(nil);local d=(type);for Kt=0,1 do if Kt~=0x000 then else do U=(T and T()or _ENV);end;end;end;local J=tonumber;BD=0X4;local o,z,x,S,O=nil,nil,nil,nil,nil;do while BD~=0X00006 do if BD<=0X2 then if BD<=0 then S=function()local xw=nil;local Sw=(0x2);repeat if Sw<=0 then return xw;else if Sw~=1 then xw=Q(A,f,f);Sw=1;else f=f+0X1;Sw=0;end;end;until false;end;BD=1;else if BD~=0x01 then A=e(i(A,0X5),"..",function(YL)if Q(YL,0X0002)==0X48 then local SW=0;repeat if SW==0 then z=J(i(YL,1,1));SW=1;else return"";end;until false;else local ux=a(J(YL,16));if z then local Tz=t(ux,z);do z=nil;end;return Tz;else return ux;end;end;end);do BD=0X0;end;else O=function()local NL,LL,cL,SL=Q(A,f,f+3);f=f+4;return SL*0X1000000+cL*0X010000+LL*0X100+NL;end;BD=0X6;end;end;else do if BD<=3 then do x=ID;end;BD=2;else do if BD==4 then o=wD;BD=5;else BD=0x3;end;end;end;end;end;end;end;local G=(0X100000000);local I,L,C=rawset,H-qD,(setmetatable);local h=(G-0X1);BD=0X00;local K,Z,v=nil,nil,nil;while BD<4 do do if not(BD<=0X1)then if BD~=0X002 then do local ZS=nil;for DS=0x0000,0X0001 do if DS==0 then ZS=2;else for y2=0X1,31 do local d2=(1);while d2<2 do if d2~=0 then do(K)[y2]=ZS;end;d2=0;else do ZS=ZS*2;end;d2=2;end;end;end;end;end;end;BD=2;else v={[0]={[0]=0X0,1,0X2,YD,0X00004,0X5,6,7,8,0X9,0x0000a,0X0000B,0Xc,0X000D,14,uD},{[0]=0X001,0X0,0X03,2,0X5,4,7,6,9,0X08,11,yD,13,12,0Xf,0XE},{[0x00]=0x2,0X0003,0,1,6,7,xD,5,0Xa,0xB,8,0X9,TD,15,UD,13},{[0x0]=3,2,0X1,0X0,0X0007,fD,5,0x4,AD,0xa,0x9,0X8,15,0Xe,0xd,12},{[0]=0x4,0X5,6,0X0007,0,qD,zD,0X3,0XC,13,0X0000e,15,0X0008,0X9,0Xa,AD},{[0]=0X5,0X0004,0x7,fD,1,0x0,0X0003,0X2,13,0X0000c,0X00f,0Xe,9,0X8,0XB,0Xa},{[0]=fD,0X00007,0X4,5,2,0X3,0X0,0X1,TD,0xf,0Xc,13,0XA,11,8,SD},{[0]=0x07,0X00006,0X5,0X4,YD,0X0002,1,0,0Xf,14,OD,UD,0xb,10,9,0X00008},{[0]=HD,0X9,10,0X0b,0Xc,0Xd,0Xe,15,0X0,1,2,3,0x4,5,6,7},{[0x00000]=0X9,8,0X0000B,0xA,0Xd,0Xc,15,TD,1,0,3,2,0x5,0x04,GD,6},{[0X0]=10,11,0x008,9,14,15,UD,13,zD,3,0,1,6,7,0X04,0X5},{[0]=0xb,0x0000A,0X9,8,15,0X000e,0X0D,0xc,3,0X2,1,0,0X7,0X006,5,4},{[0X0]=0Xc,13,14,15,8,9,10,0Xb,4,XD,6,7,0,qD,0x2,3},{[0]=13,0Xc,15,0xe,0X0009,8,0X0000b,10,0X5,4,0x7,6,1,0,YD,2},{[0]=14,0xf,12,13,10,0Xb,0X8,0x09,0X6,7,0x004,5,0x0002,0X3,0X0000,0X001},{[0X000]=0xf,0X0000e,0X00d,0X00C,0XB,0X00a,9,8,7,6,5,0x00004,3,2,1,0}};BD=0X4;end;else if BD~=0 then Z=function()local tm,km,Lm=0X0,nil,nil;while(true)do if not(tm<=0X0)then if tm~=0X00001 then return Lm*G+km;else if Lm>=H then Lm=Lm-G;end;tm=2;end;else do km,Lm=O(),O();end;tm=1;end;end;end;do BD=0X3;end;else K={[0x0]=0X00001};do BD=1;end;end;end;end;end;local F,l,c,y,mD,r=nil,nil,nil,nil,nil,nil;for fo=0,5 do if not(fo<=2)then if fo<=3 then y=KD or lD.unpack;else if fo~=0X00004 then r=eD.match;else do mD=1;end;end;end;else if fo<=0X0 then F=(hD or bit32);else if fo~=0x1 then c=function()local lw,Pw,Qw,ww,Mw,Dw,Gw=1,nil,nil,nil,nil,nil,nil;do while(true)do do if not(lw<=0X00003)then if not(lw<=0X00005)then if lw<=0X6 then Mw=(-1)^l(Qw,31,1);lw=3;else if lw~=7 then if Dw==0X0 then do if Gw~=0 then local D3=0X00001;while(true)do if D3~=0 then Dw=1;D3=0;else ww=0;do break;end;end;end;else return Mw*0;end;end;elseif Dw~=0X7ff then else if Gw~=LD then do return Mw*(1/0X00);end;else return Mw*(0X000/LD);end;end;lw=0X7;else return Mw*(0X2^(Dw-1023))*(Gw/X+ww);end;end;else if lw~=4 then Qw=O();lw=0;else do if not(Pw==0 and Qw==0)then else return 0X0;end;end;lw=0X6;end;end;else do if lw<=0X1 then do if lw==0x0 then ww=qD;lw=0X0004;else Pw=O();lw=5;end;end;else do if lw~=2 then Dw=l(Qw,20,AD);lw=0X0002;else Gw=l(Qw,0X00,20)*G+Pw;do lw=0X08;end;end;end;end;end;end;end;end;end;end;else l=function(US,oS,MS)local sS,BS=0,(nil);while sS<=0X1 do do if sS==0 then BS=(US/K[oS])%K[MS];sS=0X001;else BS=BS-BS%1;do sS=2;end;end;end;end;return BS;end;end;end;end;end;local P=F and F.bxor or function(SN,qN)local xN,UN,rN=2,nil,(nil);do repeat if xN<=2 then if not(xN<=0)then if xN==1 then while SN>LD and qN>0x000 do local Nz,dz=nil,(nil);for Ro=0,0X5 do if not(Ro<=2)then if Ro<=0X003 then SN=(SN-Nz)/16;elseif Ro~=4 then UN=UN*ZD;else do qN=(qN-dz)/16;end;end;else if Ro<=0 then do Nz=SN%0x10;end;else if Ro==1 then dz=qN%0X10;else rN=rN+v[Nz][dz]*UN;end;end;end;end;end;do xN=4;end;else SN=SN%G;xN=0X5;end;else do qN=qN%G;end;xN=0X3;end;else do if not(xN<=3)then if xN~=4 then UN=1;xN=0;else return rN+SN*UN+qN*UN;end;else rN=0x0;xN=1;end;end;end;until false;end;end;local D=F and F[cD]or function(NU,eU)local lU=(1);do repeat do if not(lU<=0)then if lU~=1 then eU=eU%G;lU=0;else NU=NU%G;lU=0X002;end;else return((NU+eU)-P(NU,eU))/2;end;end;until false;end;end;local j=F and F[vD]or function(kQ,AQ)for ZF=0X0,0X1 do if ZF==0X0 then do kQ=kQ%G;end;else do AQ=AQ%G;end;end;end;return h-D(h-kQ,h-AQ);end;local M,N={3,1,0x2},(F and F[FD]or function(xb)return h-(xb%G);end);local B,R=F and F[PD],(F and F.rshift);B=B or function(bs,Vs)for bf=0,0x2 do if not(bf<=0X0000)then if bf~=0X1 then return(bs*K[Vs])%G;else if not(Vs<0)then else return R(bs,-Vs);end;end;elseif Vs>=32 then do return 0;end;end;end;end;R=R or function(uY,fY)local FY=(0X1);local oY=(nil);do repeat do if not(FY<=1)then if FY==0X02 then return oY-oY%0X01;else if not(fY<0)then else return B(uY,-fY);end;FY=0;end;else if FY~=0x0 then do if not(fY>=32)then else return 0X0;end;end;FY=3;else do oY=(uY%G/K[fY]);end;FY=0X2;end;end;end;until false;end;end;local b=(function()local DR,bR=0X0,0;do repeat local V2=(Q(A,f,f));f=f+0X1;do bR=j(bR,B(D(V2,127),DR));end;if D(V2,0X80)==0 then return bR;end;do DR=DR+7;end;until false;end;end);BD=1;local s,k=nil,nil;repeat if BD~=0X00000 then s={[9]=0X5,[0X0]=2,[0X0009]=5,[0]=1,[7]=5,[0X1]=0X5,[0X3]=0x4,[0X5]=0X05,[5]=0X7,[0X0007]=3,[0X2]=0x7,[0X5]=0x9};BD=0X0;else k=function()local Pb=nil;local Ib=0;repeat if Ib==0X000 then Pb=b();Ib=0X1;else if Pb>L then do return Pb-G;end;end;break;end;until(false);return Pb;end;break;end;until false;local gD=S();local oD=(S());local ED=(function(t8)local B8=({Q(A,f,f+3)});local n8=P(B8[0X1],oD);local q8,w8,h8,s8=0x0,nil,nil,nil;repeat do if q8<=2 then do if q8<=0 then w8=P(B8[zD],oD);q8=0X2;else if q8~=1 then do h8=P(B8[3],oD);end;q8=0X4;else return s8*0X00001000000+h8*0X000010000+w8*256+n8;end;end;end;else do if q8<=0X3 then oD=(0Xc5*oD+t8)%256;q8=0X5;else if q8==0X0004 then do s8=P(B8[4],oD);end;q8=3;else f=f+xD;q8=1;end;end;end;end;end;until false;end);local JD=function(WI)local VI=(O());local kI=(DD);for UF=0X00001,VI,0X00001F3D do local mF,fF,pF=0X0000,nil,nil;repeat if not(mF<=0X0)then do if mF~=0X00001 then pF={Q(A,f+UF-1,f+fF-1)};mF=3;else if not(fF>VI)then else fF=VI;end;mF=2;end;end;else fF=UF+7997-1;mF=0x1;end;until mF>2;for ce=0X001,#pF do local ie=(1);repeat do if ie==0X0 then do gD=(WI*gD+0X85)%0x00100;end;break;else do pF[ce]=P(pF[ce],gD);end;ie=0;end;end;until(false);end;kI=kI..a(y(pF));end;local rI=1;repeat if rI~=0X00000 then f=f+VI;rI=0;else return kI;end;until false;end;local dD,pD,Y,iD,QD,aD=nil,nil,nil,nil,nil,nil;for M7=0X0,9 do if not(M7<=0x4)then do if not(M7<=6)then do if M7<=7 then pD[0X1]=dD;else do if M7==8 then dD=ND;else do return iD(U,ND,aD)(...);end;end;end;end;end;else if M7~=5 then aD=QD();else function QD()local Sm,Wm,rm,Dm=nil,nil,nil,(nil);for Fo=0,0x5 do if not(Fo<=2)then if not(Fo<=3)then if Fo==0X0004 then rm=O();else Dm={};end;else do(Sm)[0X0007]=b();end;end;else do if not(Fo<=0X0)then if Fo==1 then Sm={nil,{},ND,ND,nil,{},nil,{},ND};else do Wm={};end;end;else end;end;end;end;for mk=1,rm do local zk=O();local Uk=(O());local Yk=nil;for sD=0,0X1 do if sD~=0 then for gK=zk,Uk do Sm[0X006][gK]=Yk;end;else Yk=O();end;end;end;Sm[qD]=Dm;local gm=0X0000;while gm<=0X3 do if gm<=1 then if gm==0 then for wl=0x1,b()do Dm[wl]={S(),b()};end;gm=0X3;else(Sm)[13]=S();gm=2;end;else if gm~=0X2 then Sm[0X0000c]=O();gm=1;else(Sm)[3]=b();gm=0X004;end;end;end;local sm,km,um=nil,nil,(nil);for z9=0,0X03 do do if not(z9<=1)then if z9==0X02 then km={};else um=O()-0X8a23;end;else do if z9==0 then do Sm[yD]=S();end;else sm=1;end;end;end;end;end;local vm=Sm[0X00008];for qy=1,um do(vm)[qy]={[0X5]=S(),[7]=S(),[YD]=k(),[1]=k(),[6]=b(),[zD]=k(),[xD]=S()};end;(Sm)[17]=O();local jm=(S());(Sm)[5]=l(jm,1,1)~=0;Sm[4]=l(jm,2,1)~=0x0;Sm[0x13]=S();gm=0X0;local Cm=nil;while gm<=0X1 do do if gm~=0 then Cm=O()-0X4e5D;gm=2;else Sm[0XB]=S();do gm=0x00001;end;end;end;end;local qm=(Sm[0X2]);gm=4;local zm,am=nil,nil;while gm<6 do if not(gm<=2)then if gm<=3 then do am=S();end;gm=0X6;else if gm==0X4 then for V1=0,Cm-0X1 do qm[V1]=QD();end;do gm=0X000;end;else do Sm[12]=S();end;gm=0x00002;end;end;else if not(gm<=0)then if gm==0X1 then Sm[9]=b();do gm=5;end;else zm=O()-93832;gm=3;end;else(Sm)[0XE]=O();gm=0X0001;end;end;end;gm=0;local Pm=nil;do while(true)do do if not(gm<=1)then if gm~=0X2 then do for hs=1,um do local Ts=(nil);local Gs=(0X0000);while Gs<=0X1 do if Gs==0 then Ts=Sm[0X00008][hs];do Gs=0X01;end;else do for DZ,BZ in nD(M)do local qZ,MZ=nil,(nil);local HZ=2;while HZ<3 do if HZ<=0X0000 then if MZ==uD then local ge,Ae,Ve=0X0,nil,(nil);do while ge<0X3 do do if ge<=0x000 then Ae=km[Ts[BZ]];do ge=2;end;else if ge==1 then if not(Ve)then else local Be=(nil);for Qd=0X0,1 do if Qd==0X0 then(Ts)[qZ]=Ve[qD];else do Be=Ve[2];end;end;end;(Be)[#Be+0X0001]={Ts,qZ};end;do ge=3;end;else Ve=Wm[Ae];do ge=0X1;end;end;end;end;end;end;elseif MZ==2 then Ts[BZ]=hs+Ts[BZ]+0X1;end;HZ=3;else if HZ~=0X0001 then qZ=s[BZ];do HZ=0X1;end;else MZ=Ts[qZ];HZ=0X0;end;end;end;end;end;Gs=0x00002;end;end;end;end;do gm=1;end;else for VO=0x001,zm do local HO,CO,iO=0X1,nil,nil;do while(true)do if HO==0x00000 then iO=S();break;else do CO=nil;end;do HO=0;end;end;end;end;km[VO-1]=sm;if iO==105 then CO=Z();elseif iO==162 then CO=i(JD(am),c()+O());elseif iO==101 then CO=true;elseif iO==0X3b then CO=i(JD(am),S());elseif iO==0xdf then do CO=c();end;elseif iO==0XBE then CO=i(JD(am),c()+O());elseif iO==150 then CO=Z();elseif iO==0X5c then CO=Z();elseif iO==225 then CO=c();elseif iO==178 then CO=i(JD(am),2);elseif iO==0x00080 then CO=false;end;local qO={CO,{}};HO=0;while HO<0X03 do do if not(HO<=0)then if HO==0X1 then sm=sm+1;HO=0X2;else do if Pm then local uc=(0X0);repeat if uc==0 then dD[mD]=qO;do uc=0X1;end;else mD=mD+1;uc=2;end;until uc==2;end;end;HO=0x3;end;else(Wm)[sm]=qO;HO=0X1;end;end;end;end;gm=0X3;end;else if gm==0X0 then Pm=S()~=LD;do gm=0X02;end;else do return Sm;end;end;end;end;end;end;end;end;end;end;elseif not(M7<=0X1)then if M7<=2 then Y=jD;else do if M7~=3 then function iD(I8,G8,n8)local a8,X8=n8[0X006],n8[5];local Q8=(n8[0X00008]);local v8=n8[4];local B8,E8,y8=n8[0X2],n8[3],n8[0X0007];local t8=(C({},{__mode='v'}));local u8=(n8[9]);local Y8=nil;do Y8=function(...)local JP,bP=1,({});local pP=(T and T()or _ENV);local HP=({[2]=bP,[0X1]=n8});local uP,lP=WD(...);do uP=uP-0X001;end;local NP=(pP==U and I8 or pP);do for QK=0,uP do if not(E8>QK)then break;else bP[QK]=lP[QK+1];end;end;end;local nP=(0X0);if not X8 then do lP=nil;end;elseif not(v8)then else(bP)[E8]={n=uP>=E8 and uP-E8+0X1 or 0,y(lP,E8+0x1,uP+1)};end;if NP~=pP then if x then(x)(Y8,NP);else _ENV=NP;end;end;local jP,GP,kP,XP=W(function()do while true do local kX=(Q8[JP]);local fX=kX[0X6];JP=JP+1;do if fX>=46 then if not(fX>=69)then if fX>=57 then if not(fX>=0X03F)then if not(fX<0X00003C)then if not(fX>=61)then bP[kX[0X1]]=#bP[kX[0X00003]];else if fX~=62 then bP[kX[0x00001]]=bP[kX[3]]~=bP[kX[0X2]];else local nK=kX[0X00001];local CK,qK,iK=bP[nK]();if not(CK)then else(bP)[nK+0x001]=qK;do(bP)[nK+2]=iK;end;JP=kX[0X3];end;end;end;else if fX>=58 then if fX==59 then do repeat local Zf,zf=t8,(bP);do if#Zf>0x00000 then local Nw={};for SQ,VQ in q,Zf do for r5,C5 in q,VQ do do if C5[0X1]==zf and C5[2]>=0X0 then local p3=(C5[2]);if not(not Nw[p3])then else do(Nw)[p3]={zf[p3]};end;end;C5[1]=Nw[p3];C5[2]=0X1;end;end;end;end;end;end;until true;end;return true,kX[1],1;else local BU=kX[1];local RU=((kX[0X2]-1)*50);local WU=bP[BU];do for EA=1,kX[0X03]do WU[RU+EA]=bP[BU+EA];end;end;end;else local Sw=kX[0x1];(bP)[Sw]=bP[Sw](y(bP,Sw+1,nP));nP=Sw;end;end;else if fX<0X42 then if not(fX<64)then if fX==65 then(bP[kX[1]])[bP[kX[0x3]]]=bP[kX[2]];else local is=kX[1];bP[is](bP[is+1],bP[is+2]);do nP=is-0x01;end;end;else do bP[kX[1]]=pD[kX[0X00003]];end;end;else if fX>=0X43 then if fX==68 then bP[kX[1]][kX[4]]=bP[kX[2]];else bP[kX[0X1]]=bP[kX[0X3]][kX[0x7]];end;else local fw=bP[kX[3]]/bP[kX[2]];(bP)[kX[1]]=fw-fw%0x1;end;end;end;else if fX<51 then if not(fX>=0X30)then if fX==47 then do(bP)[kX[0X0001]]=D(bP[kX[0X0003]],bP[kX[0X2]]);end;else(bP)[kX[0x1]]=NP[kX[4]];end;else if not(fX>=0X31)then(bP)[kX[1]]=bP[kX[3]]%kX[7];else do if fX==0x32 then local Sc=(kX[0X1]);(bP)[Sc]=bP[Sc](bP[Sc+0X1]);do nP=Sc;end;else do repeat local fb,bb=t8,bP;if#fb>0X0 then local DS=({});for gK,LK in q,fb do for rT,JT in q,LK do do if JT[1]==bb and JT[0X2]>=0X0000 then local Vl=JT[0X00002];if not(not DS[Vl])then else(DS)[Vl]={bb[Vl]};end;(JT)[1]=DS[Vl];(JT)[2]=1;end;end;end;end;end;until true;end;return false,kX[0X00001],nP;end;end;end;end;else do if not(fX>=0x036)then if not(fX>=0x34)then local sD,bD=kX[1],(bP[kX[0X3]]);do(bP)[sD+1]=bD;end;bP[sD]=bD[kX[7]];else if fX~=0X35 then do bP[kX[0X1]]=bP[kX[0X3]]%bP[kX[2]];end;else bP[kX[0X1]]={y({},1,kX[0X3])};end;end;else do if fX>=0X37 then do if fX==56 then local id=kX[1];local yd,rd=bP[id]();if not(yd)then else bP[id+1]=rd;do JP=kX[0X0003];end;end;else do NP[kX[0X0004]]=bP[kX[1]];end;end;end;else(bP)[kX[0X001]]=bP[kX[3]]<bP[kX[2]];end;end;end;end;end;end;else do if not(fX<80)then if fX<86 then if not(fX<0x053)then do if not(fX<0X00054)then if fX~=0X0055 then nP=kX[0X01];bP[nP]();nP=nP-0X1;else local cc=kX[1];local Pc,Nc,Ac=bP[cc],bP[cc+1],bP[cc+2];bP[cc]=Y(function()for v1=Pc,Nc,Ac do u(true,v1);end;end);JP=kX[3];end;else local Kn,Jn=kX[1],kX[0x00003];nP=Kn+Jn-0X001;repeat local Ni,Fi=t8,bP;if not(#Ni>0)then else local SV=({});for py,yy in q,Ni do for kO,uO in q,yy do if not(uO[1]==Fi and uO[2]>=0x0)then else local Qr=(uO[2]);do if not(not SV[Qr])then else SV[Qr]={Fi[Qr]};end;end;(uO)[0X1]=SV[Qr];(uO)[2]=1;end;end;end;end;until true;return true,Kn,Jn;end;end;else do if not(fX>=81)then local L8=(kX[0x00001]);local P8,l8=bP[L8]();if P8 then JP=kX[3];(bP)[L8+0X00003]=l8;end;else do if fX==0X52 then do bP[kX[0X1]]=kX[0X4];end;else(bP)[kX[0x1]]=bP[kX[0X0003]]>=bP[kX[0x2]];end;end;end;end;end;else if not(fX<89)then if fX>=90 then do if fX==91 then repeat local BA,ZA=t8,bP;if#BA>0X0 then local Ej=({});for We,Je in q,BA do for Gr,Rr in q,Je do if Rr[1]==ZA and Rr[0X2]>=0x00 then local iB=Rr[0X2];do if not(not Ej[iB])then else do Ej[iB]={ZA[iB]};end;end;end;(Rr)[1]=Ej[iB];Rr[2]=1;end;end;end;end;until true;return true,kX[0X001],0X0;else bP[kX[0X1]]=bP[kX[0X003]][bP[kX[0X2]]];end;end;else local G2=kX[1];(bP[G2])(bP[G2+0X1]);nP=G2-0x1;end;else if not(fX<0x57)then if fX==0X58 then do bP[kX[1]]=P(bP[kX[0X3]],bP[kX[2]]);end;else local Lw=(kX[1]);do nP=Lw+kX[0X0003]-0X001;end;(bP[Lw])(y(bP,Lw+1,nP));nP=Lw-0x00001;end;else local N7=(G8[kX[3]]);do N7[0X1][N7[2]]=bP[kX[1]];end;end;end;end;else if fX>=74 then if fX>=0X04D then if not(fX>=78)then bP[kX[1]]=bP[kX[3]]/bP[kX[2]];else do if fX~=0X4F then if bP[kX[3]]==bP[kX[2]]then do JP=kX[0X01];end;end;else bP[kX[1]]=bP[kX[0X3]]<=bP[kX[0X02]];end;end;end;else if fX<75 then JP=kX[3];else if fX==76 then if kX[2]==111 then JP=JP-0X1;do Q8[JP]={[0x003]=(kX[3]-216),[6]=0x00013,[1]=(kX[0X1]-216)};end;else if not(bP[kX[1]])then else do JP=kX[3];end;end;end;else local aU=kX[0X1];local wU=(Y(function(...)(u)();for Nm in...do(u)(true,Nm);end;end));(wU)(bP[aU],bP[aU+0X1],bP[aU+2]);nP=aU;do bP[aU]=wU;end;do JP=kX[0X0003];end;end;end;end;else if not(fX<0X0047)then if fX<0X48 then bP[kX[1]]=j(bP[kX[3]],bP[kX[0X2]]);else if fX~=0X049 then(bP)[kX[0x1]]=bP[kX[3]]~=kX[7];else(bP)[kX[0X1]]=bP[kX[0X3]]*bP[kX[2]];end;end;else do if fX~=70 then if kX[0X02]~=0XfA then repeat local pY,QY,JY=t8,bP,kX[0X1];do if not(#pY>0)then else local ed=({});for Rm,Sm in q,pY do do for tk,Kk in q,Sm do do if not(Kk[1]==QY and Kk[0x2]>=JY)then else local Nk=Kk[2];if not(not ed[Nk])then else ed[Nk]={QY[Nk]};end;Kk[1]=ed[Nk];do(Kk)[0X02]=1;end;end;end;end;end;end;end;end;until true;else JP=JP-0x0001;do(Q8)[JP]={[0X1]=(kX[1]-184),[0X3]=(kX[0X3]-184),[6]=0X00031};end;end;else bP[kX[0X001]]={};end;end;end;end;end;end;end;else do if fX>=0X0017 then if fX<34 then if fX<28 then if fX<25 then do if fX~=0X18 then if kX[0X2]==156 then JP=JP-0X1;do(Q8)[JP]={[1]=(kX[0X001]-85),[0X3]=(kX[3]-0X0055),[6]=33};end;else do for tw=kX[1],kX[3]do bP[tw]=nil;end;end;end;else bP[kX[1]]=bP[kX[3]]>bP[kX[2]];end;end;else do if not(fX>=0x1A)then(bP[kX[1]])[bP[kX[0X3]]]=kX[7];else if fX~=27 then do if bP[kX[0X3]]~=bP[kX[2]]then JP=kX[0X1];end;end;else local uq=(kX[2]);local Pq=kX[0X3];local iq=(kX[0X0001]);do if Pq~=0X0 then nP=iq+Pq-0x1;end;end;local Yq,gq=nil,(nil);if Pq==0X01 then Yq,gq=WD(bP[iq]());else do Yq,gq=WD(bP[iq](y(bP,iq+0X1,nP)));end;end;if uq==1 then do nP=iq-0X1;end;else if uq~=0 then Yq=iq+uq-2;nP=Yq+0X1;else do Yq=Yq+iq-1;end;nP=Yq;end;local eQ=(0);for zH=iq,Yq do eQ=eQ+0x1;bP[zH]=gq[eQ];end;end;end;end;end;end;else if fX>=0X001F then do if fX>=0X00020 then do if fX==0x21 then local FE,LE=kX[0X1],uP-E8;do if not(LE<0)then else LE=-0X0001;end;end;for To=FE,FE+LE do(bP)[To]=lP[E8+(To-FE)+1];end;nP=FE+LE;else do bP[kX[1]]=true;end;end;end;else do(bP)[kX[1]]=-bP[kX[3]];end;end;end;else if not(fX<0x001d)then if fX~=30 then local Jx=kX[0X001];local Fx=(kX[2]-1)*50;local cx=bP[Jx];for Vs=1,nP-Jx do(cx)[Fx+Vs]=bP[Jx+Vs];end;else bP[kX[0X1]]=kX[0x4];end;else do if not(bP[kX[3]]<=bP[kX[0x2]])then JP=kX[1];end;end;end;end;end;else do if fX>=40 then if fX>=0X2b then if fX<44 then local Y4=(kX[0X01]);local L4,y4=bP[Y4]();if L4 then for Mx=0X00001,kX[2]do bP[Y4+Mx]=y4[Mx];end;JP=kX[0x3];end;else do if fX==45 then local Lh=kX[0X00003];local Ch=bP[Lh];do for mw=Lh+0X00001,kX[0x00002]do do Ch=Ch..bP[mw];end;end;end;(bP)[kX[1]]=Ch;else do if kX[2]==0X0009b then JP=JP-1;Q8[JP]={[1]=(kX[1]-135),[0X3]=(kX[0X3]-135),[0X6]=0X3C};elseif kX[0X2]~=0x5 then repeat local aI,KI=t8,(bP);if not(#aI>0X0)then else local k1=({});for Xl,Tl in q,aI do for JZ,rZ in q,Tl do if not(rZ[1]==KI and rZ[0x2]>=0X00)then else local W8=rZ[0X2];if not(not k1[W8])then else(k1)[W8]={KI[W8]};end;(rZ)[0X00001]=k1[W8];rZ[0x2]=1;end;end;end;end;until true;local dS=kX[1];return false,dS,dS;else JP=JP-0X1;(Q8)[JP]={[6]=0X00010,[3]=(kX[0X3]-0X67),[1]=(kX[0X01]-103)};end;end;end;end;end;else do if fX<0X029 then local lb=kX[1];local Zb=Y(function(...)u();for pl,Ol,hl,el,ol,ml,Gl,bl,Yl,fl in...do(u)(true,{pl,Ol,hl,el,ol,ml,Gl,bl,Yl,fl});end;end);(Zb)(bP[lb],bP[lb+0X001],bP[lb+0X2]);nP=lb;do(bP)[lb]=Zb;end;do JP=kX[3];end;else if fX~=0X2a then pD[kX[3]]=bP[kX[1]];else(bP)[kX[0X1]]=N(bP[kX[3]]);end;end;end;end;else if not(fX<0X25)then if not(fX<38)then if fX==0X0027 then bP[kX[1]]=bP[kX[0X3]]^bP[kX[0X2]];else do bP[kX[0x1]]=R(bP[kX[0X3]],bP[kX[2]]);end;end;else local Ek=G8[kX[3]];(bP)[kX[1]]=Ek[1][Ek[2]];end;else if not(fX<0X23)then if fX==0x024 then local DS=B8[kX[3]];local RS=(DS[0x1]);local lS=(nil);local KS=#RS;do if not(KS>0X0)then else do lS={};end;for Bo=0X01,KS do local ho=RS[Bo];if ho[0X1]==0 then(lS)[Bo-0X00001]={bP,ho[2]};else(lS)[Bo-0X1]=G8[ho[0X0002]];end;end;(V)(t8,lS);end;end;(bP)[kX[0x1]]=iD(NP,lS,DS);else local mo=kX[1];do(bP)[mo]=bP[mo](bP[mo+1],bP[mo+0X2]);end;nP=mo;end;else local wZ=(kX[0X00003]);do bP[kX[1]]=bP[wZ]..bP[wZ+1];end;end;end;end;end;end;else do if fX<11 then if not(fX<5)then do if not(fX<0X8)then if not(fX>=9)then if not(bP[kX[3]]<bP[kX[2]])then do JP=kX[1];end;end;else if fX==10 then bP[kX[0X0001]][kX[0x4]]=kX[0X7];else local oi=kX[0X1];local qi=(Y(function(...)(u)();do for ZS,PS in...do(u)(true,ZS,PS);end;end;end));(qi)(bP[oi],bP[oi+0X01],bP[oi+2]);do nP=oi;end;bP[oi]=qi;JP=kX[0X3];end;end;else if fX>=0X0006 then if fX~=7 then bP[kX[0X1]]=bP[kX[0X3]]-bP[kX[0x00002]];else local XZ=(kX[0X1]);(bP[XZ])(y(bP,XZ+1,nP));do nP=XZ-1;end;end;else if bP[kX[3]]~=kX[7]then else JP=kX[0X01];end;end;end;end;else do if fX>=2 then if not(fX>=0X3)then do(bP)[kX[0X00001]]=false;end;else if fX==0X4 then bP[kX[0X1]]=bP[kX[3]]+bP[kX[2]];else do if kX[2]==0X8C then JP=JP-0X1;Q8[JP]={[6]=19,[0X3]=(kX[3]-246),[1]=(kX[1]-246)};elseif kX[2]~=0X6B then if not bP[kX[1]]then JP=kX[3];end;else JP=JP-1;Q8[JP]={[6]=0X1f,[0X03]=(kX[0X3]-0X0018),[1]=(kX[1]-0X18)};end;end;end;end;else if fX==0X001 then local K9=kX[1];for Ed=K9,K9+(kX[0X0003]-1)do(bP)[Ed]=lP[E8+(Ed-K9)+1];end;else if kX[0X00002]==148 then JP=JP-1;Q8[JP]={[0X1]=(kX[1]-242),[0x03]=(kX[0X00003]-0XF2),[6]=0X02c};else bP[kX[0X001]]=not bP[kX[3]];end;end;end;end;end;else if fX>=0X11 then if fX<0x14 then if not(fX>=0X012)then local sn=kX[0x00001];do nP=sn+kX[0X03]-1;end;do(bP)[sn]=bP[sn](y(bP,sn+0X0001,nP));end;nP=sn;else if fX~=0X13 then do if not(not(bP[kX[0x03]]<=kX[0x0007]))then else JP=kX[0x1];end;end;else if kX[2]~=45 then(bP)[kX[1]]=nil;else JP=JP-1;Q8[JP]={[0X003]=(kX[3]-40),[6]=33,[0X1]=(kX[1]-40)};end;end;end;else do if fX>=0X15 then if fX==0X16 then do if bP[kX[3]]<=bP[kX[2]]then JP=kX[0X00001];end;end;else if kX[2]==194 then JP=JP-0X1;Q8[JP]={[1]=(kX[1]-0X079),[0X6]=0X21,[3]=(kX[0X00003]-121)};else repeat local hk,Rk=t8,(bP);if not(#hk>0X0)then else local bV=({});do for BC,LC in q,hk do for po,yo in q,LC do do if yo[1]==Rk and yo[2]>=0 then local B2=(yo[2]);if not(not bV[B2])then else(bV)[B2]={Rk[B2]};end;(yo)[1]=bV[B2];yo[0x0002]=1;end;end;end;end;end;end;until true;local bK=kX[1];return false,bK,bK+kX[0X3]-0X2;end;end;else HP[kX[0X3]]=bP[kX[0X01]];end;end;end;else if fX<14 then if fX>=12 then if fX~=13 then(bP)[kX[0X1]]=bP[kX[0X00003]];else bP[kX[0x1]]=bP[kX[3]]==bP[kX[2]];end;else bP[kX[0X01]]=HP[kX[3]];end;else if not(fX<0X0000f)then if fX~=0X10 then if bP[kX[3]]==kX[7]then else do JP=kX[0X1];end;end;else repeat local Rc,gc=t8,(bP);if#Rc>0 then local HU={};for qW,gW in q,Rc do for Ba,ja in q,gW do if ja[1]==gc and ja[2]>=0X00000 then local Rl=(ja[2]);do if not HU[Rl]then(HU)[Rl]={gc[Rl]};end;end;(ja)[0X01]=HU[Rl];ja[2]=1;end;end;end;end;until true;return;end;else if not(bP[kX[3]]<bP[kX[0x002]])then else JP=kX[0X1];end;end;end;end;end;end;end;end;end;end;end;end;end);if not(jP)then do if d(GP)~='\115t\114i\110\103'then(p)(GP,0);else do if not(r(GP,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if r(GP,"^.-:%d+: ")then(p)("\076ur\097p\104 Sc\114ip\116\058"..(a8[JP-1]or'\040i\110\116\101\114\110\097\108\041')..": "..m(GP),0);else(p)(GP,0x00000);end;end;end;else if GP then if XP~=0x001 then return bP[kP](y(bP,kP+1,nP));else return bP[kP]();end;elseif kP then return y(bP,kP,XP);end;end;end;end;if not(x)then else x(Y8,I8);end;return Y8;end;else end;end;end;else if M7==0 then dD={};else pD={};end;end;end;end)(ipairs,0x000b,5,6,0X9,0x1,3,12,0X7,0xF,0XD,coroutine.wrap,assert,"\098a\110\100",string,bit,0X8,coroutine,string.byte,2,0x00004,'bo\114',0x000010,setfenv,string.gsub,'',tostring,"lshi\102\116",0Xe,nil,0X0000A,0,unpack,'\098\110\111t',table,{0xB7e,3824849971,174324300,2100224563,0x152c89e5,0X00C1441BB9,196088692,0X0082D95A33,3428299299},...);