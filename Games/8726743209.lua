do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==6) then v28=nil;function v28()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;while true do local v61=0;while true do if (v61~=0) then else local v76=0 + 0;while true do if ((0 -0)==v76) then if (v38==(1391 -(948 + 441))) then local v93=1872 -(592 + 1280);local v94;while true do if (v93~=(0 -0)) then else v94=0;while true do local v99=0;while true do if (v99==(0 -0)) then if (v94==(3 -2)) then local v102=1419 -(1107 + 312);while true do if (v102==(0 -0)) then for v175=1,v23() do v41[v175]=v23();end return v42;end end end if (v94==0) then for v104=1,v23() do local v105=0 + 0;local v106;while true do if (v105==0) then v106=v21();if (v20(v106,1 + 0,1 + 0)==0) then local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==2) then while true do if (v181==3) then if (v20(v183,3,3)==(1015 -(581 + 433))) then v184[975 -(447 + 524)]=v44[v184[1568 -(169 + 1395)]];end v39[v104]=v184;break;end if (v181==0) then local v239=914 -(579 + 335);while true do if (v239~=1) then else v181=1 + 0;break;end if (v239==(166 -(55 + 111))) then v182=v20(v106,3 -1,1 + 2);v183=v20(v106,18 -14,2 + 4);v239=1;end end end if (v181==(2 -1)) then local v240=0 + 0;local v241;while true do if (0==v240) then v241=0 + 0;while true do if (v241==1) then v181=2 -0;break;end if (v241==0) then local v265=0 -0;while true do if (v265~=0) then else v184={v22(),v22(),nil,nil};if (v182==(0 + 0)) then local v267=0 -0;local v268;local v269;while true do if (v267~=(0 + 0)) then else v268=0 + 0;v269=nil;v267=1 + 0;end if (v267~=(1812 -(1545 + 266))) then else while true do if (v268==(0 -0)) then v269=0 -0;while true do if (v269==(0 + 0)) then v184[3]=v22();v184[5 -1]=v22();break;end end break;end end break;end end elseif (v182==(1 + 0)) then v184[3]=v23();elseif (v182==(2 -0)) then v184[7 -4]=v23() -(2^(31 -15));elseif (v182==(2 + 1)) then local v277=0;local v278;local v279;while true do if (v277==0) then v278=0;v279=nil;v277=1 + 0;end if (v277~=(4 -3)) then else while true do if (0==v278) then v279=0 -0;while true do if (v279==(0 -0)) then v184[1 + 2]=v23() -(2^(1761 -(1196 + 549)));v184[3 + 1]=v22();break;end end break;end end break;end end end v265=2 -1;end if (v265~=(1488 -(89 + 1398))) then else v241=1 + 0;break;end end end end break;end end end if (v181~=(1964 -(874 + 1088))) then else local v242=1768 -(520 + 1248);local v243;while true do if (v242==(0 + 0)) then v243=1670 -(949 + 721);while true do if (v243~=(180 -(126 + 54))) then else local v266=0;while true do if (0~=v266) then else if (v20(v183,3 -2,4 -3)==(1 + 0)) then v184[2]=v44[v184[2]];end if (v20(v183,2,2)~=(1 + 0)) then else v184[2 + 1]=v44[v184[10 -7]];end v266=3 -2;end if (v266==1) then v243=1;break;end end end if (v243==1) then v181=3;break;end end break;end end end end break;end if (v180==1) then v183=nil;v184=nil;v180=797 -(117 + 678);end if (v180==0) then v181=983 -(860 + 123);v182=nil;v180=361 -(245 + 115);end end end break;end end end for v107=1 + 0,v23() do v40[v107-(374 -(110 + 263))]=v28();end v94=1;end break;end end end break;end end end if (v38==1) then local v95=0 + 0;local v96;while true do if (v95==0) then v96=0;while true do if (v96~=0) then else local v100=0 -0;while true do if (v100==(1408 -(290 + 1117))) then v96=1;break;end if (v100~=0) then else v43=v23();v44={};v100=305 -(109 + 195);end end end if (v96==(1 + 0)) then local v101=0;while true do if (v101~=1) then else v96=1971 -(190 + 1779);break;end if (v101~=(0 -0)) then else for v109=1 -0,v43 do local v110=0;local v111;local v112;local v113;while true do if (v110~=0) then else local v177=0 + 0;while true do if (1~=v177) then else v110=2 -1;break;end if (v177~=0) then else v111=0 -0;v112=nil;v177=1 + 0;end end end if (v110==1) then v113=nil;while true do if (v111==(1 + 0)) then if (v112==(1 + 0)) then v113=v21()~=(0 -0);elseif (v112==2) then v113=v24();elseif (v112==3) then v113=v25();end v44[v109]=v113;break;end if (v111==0) then local v194=0;local v195;local v196;while true do if (v194~=(1 + 0)) then else while true do if (v195==(0 -0)) then v196=0 -0;while true do if ((1 -0)==v196) then v111=1;break;end if (v196~=0) then else local v255=0;local v256;while true do if ((0 + 0)==v255) then v256=0 -0;while true do if ((0 -0)~=v256) then else v112=v21();v113=nil;v256=1 -0;end if (v256~=(1 + 0)) then else v196=1;break;end end break;end end end end break;end end break;end if (0==v194) then v195=0 -0;v196=nil;v194=1;end end end end break;end end end v42[3]=v21();v101=1;end end end if (v96==(1 + 1)) then v38=1725 -(523 + 1200);break;end end break;end end end v76=1 + 0;end if (v76==(1515 -(1413 + 101))) then v61=1;break;end end end if (v61==1) then if (0~=v38) then else local v77=1013 -(962 + 51);while true do if (v77~=0) then else v39={};v40={};v77=1;end if (v77==(1 + 1)) then v38=1;break;end if (v77==(2 -1)) then v41={};v42={v39,v40,nil,v41};v77=2;end end end break;end end end end v29=nil;v17=7;end if (v17==4) then function v24()local v45=(1502 + 103) -((2003 -1302) + 904);local v46;local v47;while true do if (v45==(1 + 0)) then return (( -(1 + 1) * v20(v47,880 -(79 + 769))) + 1 + 0 + 0) * ((887 -(623 + 262))^(v20(v47,53 -32,26 + 5) -(1723 -(327 + 373)))) * ((((v20(v47,3 -2,(1556 -(919 + 618)) + (378 -(117 + 260))) * ((3 -1)^(61 -29))) + v46)/((1923 -(930 + 991))^(1 + 51))) + (3 -(1 + 1)));end if (v45==(0 -0)) then v46=v23();v47=v23();v45=710 -((998 -585) + 296);end end end v25=nil;function v25(v30)local v48;if  not v30 then v30=v23();if (v30==(0 + 0)) then return "";end end v48=v3(v15,v18,(v18 + v30) -1);v18=v18 + v30;local v49={};for v62=1960 -(1584 + 375), #v48 do v49[v62]=v2(v1(v3(v48,v62,v62)));end return v6(v49);end v17=5;end if (v17==3) then v23=nil;function v23()local v50=(0 -0) -0;local v51;local v52;local v53;local v54;while true do if (v50==(125 -(107 + 17))) then return (v54 * 16777216) + (v53 * (66841 -(1139 + 166))) + (v52 * 256) + v51;end if (v50==(0 + 0)) then v51,v52,v53,v54=v1(v15,v18,v18 + 3);v18=v18 + (1715 -((1214 -663) + 1160));v50=1 + 0;end end end v24=nil;v17=4;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then local v64=0;while true do if (v64==0) then v19=v0(v3(v31,1,1));return "";end end else local v65=0;local v66;while true do if (0==v65) then v66=v2(v0(v31,16));if v19 then local v78=v5(v66,v19);v19=nil;return v78;else return v66;end break;end end end end);v17=1;end if (v17==1) then v20=nil;function v20(v32,v33,v34)if v34 then local v67=(v32/((1170 -(854 + 314))^(v33-1)))%((2 -0)^(((v34-((1448 -(1035 + 412)) -0)) -(v33-1)) + 1));return v67-(v67%(1 + 0));else local v68=1676 -(1459 + 217);local v69;while true do if (v68==0) then v69=(1721 -(115 + 1604))^(v33-(1 + 0));return (((v32%(v69 + v69))>=v69) and (1 + (133 -(92 + 41)))) or (0 + 0);end end end end v21=nil;v17=2;end if (v17==2) then function v21()local v55=v1(v15,v18,v18);v18=v18 + 1;return v55;end v22=nil;function v22()local v56,v57=v1(v15,v18,v18 + 1 + 1);v18=v18 + (1302 -(296 + 1004));return (v57 * (1798 -(476 + 1066))) + v56;end v17=3;end if (v17==7) then function v29(v35,v36,v37)local v58=v35[1];local v59=v35[2];local v60=v35[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==0) then v71=1;v72= -1;v70=1;end if (v70==2) then v75=nil;function v75()local v79=v58;local v80=Const;local v81=v59;local v82=v60;local v83=v27;local v84={};local v85={};local v86={};for v91=0 + 0,v74 do if (((335 + 679 + 1213)>375) and (v91>=v82)) then v84[v91-v82]=v73[v91 + (1360 -(115 + (2988 -1744)))];else v86[v91]=v73[v91 + 1 + 0];end end local v87=(v74-v82) + (3 -(9 -7));local v88;local v89;while true do local v92=0 + 0;while true do if ((v92==1) or ((4451 -(947 + 628))>(2086 + 2824))) then if (((2596 -(298 + 1018))>=(1133 -(78 + 448))) and (v89<=(43 -28))) then if ((4249==(19698 -15449)) and (v89<=(4 + 3))) then if ((v89<=3) or ((5019 -(60 + 11))<165)) then if ((v89<=((1 + 0) -0)) or ((97 + 167)>(5396 -(562 + 1211)))) then if ((v89>(1645 -(1213 + 432))) or ((9195 -5157)>4708)) then if ((v88[175 -(33 + 140)]==v86[v88[6 -2]]) or ((553 + 1596)==2873)) then v71=v71 + (1413 -(922 + 490));else v71=v88[3 -0];end else v86[v88[5 -3]]={};end elseif ((v89==2) or ((13210 -8742)==(3547 + 1124))) then v86[v88[365 -(131 + 232)]]=v36[v88[8 -5]];else v86[v88[223 -(145 + 76)]]=v86[v88[10 -(27 -20)]];end elseif ((v89<=5) or ((277 + 765)>=3596)) then if ((v89==(6 -(4 -2))) or ((5403 -(838 + 11))<(3917 + 457))) then if (v86[v88[(801 + 645) -((2256 -1383) + 571)]] or (901>=(4356 + 197 + 324))) then v71=v71 + 1;else v71=v88[3];end else v86[v88[7 -5]][v88[3 -0]]=v86[v88[2 + 2]];end elseif ((v89==(10 -4)) or ((614 + 2108)>(9071 -4899))) then local v118=0 + 0;local v119;local v120;while true do if ((0==v118) or (4199==(1372 -(1750 -711)))) then local v185=0 + 0;while true do if ((v185==(1664 -(901 + 763))) or (1905==1644)) then v119=0;v120=nil;v185=723 -(481 + 241);end if (((3041 -(819 + 453))<3476) and ((1 + 0)==v185)) then v118=1;break;end end end if ((2896==(13440 -(8222 + 2322))) and (v118==(1419 -(950 + 468)))) then while true do if ((v119==(0 -0)) or (904>=1214)) then v120=v88[6 -4];v86[v120]=v86[v120](v86[v120 + (1505 -((2384 -(382 + 785)) + 287))]);break;end end break;end end else v86[v88[8 -6]]=v29(v81[v88[1321 -(404 + (2799 -(1729 + 156)))]],nil,v37);end elseif ((v89<=(9 + 2)) or (613>(18252 -13941))) then if ((v89<=((72 -41) -22)) or ((2226 -(451 + 85))<=1418)) then if ((v89==8) or ((82 + 649 + 1803)>(8697 -(926 + 4240)))) then if ( not v86[v88[2]] or ((6695 -4396)==3713)) then v71=v71 + (1723 -((2735 -1263) + 250));else v71=v88[2 + 1];end else local v122=1119 -(825 + 294);local v123;local v124;local v125;local v126;local v127;while true do if (((243 + 696)<=(1856 -633)) and (v122==1)) then v125=nil;v126=nil;v122=1970 -(1098 + 870);end if ((v122==(0 -0)) or (((3722 -743) + (527 -102))>=3560)) then v123=0;v124=nil;v122=1;end if ((2689<=((27757 -18478) -5646)) and (v122==(310 -(9 + 299)))) then v127=nil;while true do if ((v123==(785 -(356 + 429))) or ((868 + (3440 -1298))>=(210 + 3310))) then local v208=0 + 0;while true do if (((581 -(32 + 548))==v208) or ((962 + 1110)>2381)) then v123=1338 -(88 + 1249);break;end if (((327 + 191 + 223)<=(3715 -(345 + 1102))) and (v208==(1713 -(1601 + 112)))) then v124=v88[2];v125,v126=v83(v86[v124](v86[v124 + (2 -1)]));v208=1435 -(877 + 557);end end end if (((543 -(492 + 49))==v123) or ((5509 -2667)<(152 + 364))) then for v219=v124,v72 do local v220=0 + 0;local v221;while true do if ((v220==(0 -0)) or ((8050 -3117)==3465)) then v221=(0 -0) -(827 -(168 + 659));while true do if (((1400 + 1587)==(4897 -(626 + 1284))) and (v221==(0 -0))) then v127=v127 + 1;v86[v219]=v125[v127];break;end end break;end end end break;end if ((v123==(1 -0)) or ((975 + 591)>=(898 + 227 + 460))) then local v209=860 -(113 + 747);while true do if ((1==v209) or ((625 + 2974)<3301)) then v123=670 -(517 + 151);break;end if ((v209==(160 -(116 + 44))) or (((3984 -(257 + 1035)) -(846 + 105))==4975)) then v72=(v126 + v124) -1;v127=(0 -0) + 0;v209=1;end end end end break;end end end elseif ((v89==(24 -14)) or (((1953 -(628 + 1046)) + 50)==(8253 -6307))) then local v128=105 -(35 + 70);local v129;local v130;local v131;while true do if ((v128==(0 -0)) or ((3582 -(139 + 756))>(11673 -6927))) then v129=0 + 0;v130=nil;v128=1 + 0;end if ((v128==(1225 -((1663 -(320 + 696)) + 577))) or (3468<=2960)) then v131=nil;while true do if (((5337 -(17 + 2 + 571))>=((985 -(160 + 197)) + 3724)) and (v129==(0 + (1377 -(860 + 517))))) then local v210=0;while true do if ((((4947 -(1133 + 799)) + 392)>(4521 -(790 + 444))) and (v210==(0 + 0))) then v130=154 -(30 + 124);v131=nil;v210=1 + 0;end if ((v210==(109 -(11 + 97))) or ((810 + 629)>=(13690 -(17495 -8158)))) then v129=1;break;end end end if ((((3908 -(921 + 178)) -1805)==1004) and (1==v129)) then while true do if ((v130==((1686 -(218 + 1468)) -0)) or ((7327 -(5554 -(57 + 87)))>(5697 -3322))) then v131=v88[2];v86[v131](v12(v86,v131 + 1 + 0,v88[2 + (2 -1)]));break;end end break;end end break;end end else local v132=0 + 0;local v133;while true do if ((v132==(0 -0)) or ((4146 -(15 + 1666))==(4147 -1660))) then v133=v88[2];v86[v133]=v86[v133](v12(v86,v133 + 1,v88[6 -3]));break;end end end elseif (((1479 + 3436)>=(15919 -11670)) and (v89<=(59 -46))) then if ((v89==12) or ((1047 -((665 -(87 + 120)) + 306 + 107))==(877 + 3911))) then local v134=735 -(285 + 450);local v135;local v136;while true do if ((v134==(0 + 0)) or ((3495 -(20 + 1898))<(2319 -(35 + 1448)))) then v135=(464 -(377 + 87)) + 0;v136=nil;v134=3 -2;end if (((2161 -(27 + 49))>=(223 -94)) and (v134==(1 + 0))) then while true do if ((v135==(0 + 0)) or ((4525 -(176 + 1239))>=4755)) then v136=v88[3 -(66 -(38 + 27))];v86[v136](v86[v136 + 1 + 0]);break;end end break;end end elseif (((142 + 106)==((1333 -1011) -(876 -(539 + 263)))) and (v86[v88[493 -(471 + 20)]]==v88[1 + 3])) then v71=v71 + (1494 -((4352 -3436) + 577));else v71=v88[377 -(59 + 315)];end elseif (((1218 + (2405 -(710 + 120)))>(136 + 661)) and (v89>(1030 -(842 + 174)))) then if ((((5075 -2138) -(1337 + 440))>=(1930 -1303)) and (v86[v88[2 + 0]]==v86[v88[2 + 2]])) then v71=v71 + (802 -(546 + 255));else v71=v88[2 + 1];end else v86[v88[2 + 0]]();end elseif ((v89<=(7 + 16)) or (2072>(1378 + 1883))) then if ((v89<=(2 + 17)) or ((11430 -8781)>=(6777 -3060))) then if ((((3608 -1775) + 1848)>(468 + 570)) and (v89<=(1343 -(836 + 490)))) then if (((5754 -(1264 + 494))>(2694 -(649 + 67))) and (v89==(15 + 1))) then local v137=0;local v138;local v139;local v140;while true do if ((v137==(1985 -(1326 + 659))) or ((3919 + (1203 -579))<((3289 -(368 + 449)) -868))) then v138=v81[v88[3]];v139=nil;v137=3 -2;end if ((v137==(4 -2)) or ((1711 + 444)>(6314 -1810))) then for v197=(2 + 1) -2,v88[560 -((607 -371) + 320)] do local v198=0 -0;local v199;local v200;while true do if ((2714<=(4575 -1629)) and (v198==((0 + 0) -0))) then v199=0 + 0;v200=nil;v198=(29 + 15) -(6 + 37);end if (((1 + 0)==v198) or ((5721 -(521 + 338))==((3262 -(730 + 1040)) + 297 + 34))) then while true do if ((v199==(2 -(1069 -(548 + 520)))) or ((2030 -(690 + 496))<=(1214 -(422 + 362)))) then if (((2114 -(600 + 129))<=(3381 -1111)) and (v200[1747 -(1400 + 346)]==(7 -4))) then v140[v197-(2 -1)]={v86,v200[1 + 2]};else v140[v197-(1 + 0)]={v36,v200[3]};end v85[ #v85 + 1]=v140;break;end if (((4674 -(285 + (1404 -(935 + 54))))>=(1235 + 357 + 1483)) and (v199==(148 -(34 + 114)))) then local v247=0 -0;while true do if (((75 -(69 + 5))==v247) or ((449 -123)>=(3244 -(61 + (2085 -(319 + 30)))))) then v199=1 + 0;break;end if (((16 + 4028)>=(3041 + 26)) and (v247==(1456 -(1282 + (795 -621))))) then v71=v71 + 1 + 0;v200=v79[v71];v247=1;end end end end break;end end end v86[v88[561 -(82 + 477)]]=v29(v138,v139,v37);break;end if (((2269 -(563 + 1384))<=(4546 -2818)) and (v137==((860 -(722 + 137)) -0))) then local v188=0;while true do if ((v188==1) or ((3569 -1401)<=(2579 -1654))) then v137=708 -(63 + 643);break;end if (((2446 -(214 + 112 + 313))<(5582 -2384)) and ((0 + 0)==v188)) then v140={};v139=v9({},{__index=function(v222,v223)local v232=0 + 0;local v233;local v234;while true do if (((6705 -3225)>(1267 -886)) and (v232==(2 -1))) then while true do if ((v233==(0 + (762 -(500 + 262)))) or ((2970 + 1027)==(21522 -(12089 + 4596)))) then v234=v140[v223];return v234[1187 -(1168 + 18)][v234[1825 -(328 + 1495)]];end end break;end if (((299 + 2457)<=(2857 + 1600)) and (v232==(1631 -(1141 + 490)))) then v233=0;v234=nil;v232=1;end end end,__newindex=function(v224,v225,v226)local v235=0 -0;local v236;while true do if (((124 + 134 + 4648)>=(8828 -5417)) and (v235==0)) then v236=v140[v225];v236[85 -(6 + 78)][v236[2]]=v226;break;end end end});v188=1 + 0;end end end end else local v141=0;local v142;local v143;local v144;while true do if (((11344 -8495)>=(268 -(18 + 241))) and ((1918 -(1743 + 175))==v141)) then v142=0 + 0;v143=nil;v141=1 + 0;end if ((v141==(1 + (0 -0))) or ((4340 -3106)==(4104 -3148))) then v144=nil;while true do if ((v142==(0 + 0)) or ((899 -287)>=((2667 -1766) + (2750 -(7 + 261))))) then local v211=56 -(47 + 9);while true do if ((2846>1535) and (v211==(0 + 0))) then local v244=0;while true do if (((884 + 1165)<=(3483 -(737 + 605))) and (v244==(1793 -(619 + 1173)))) then v211=1;break;end if (((5543 -(3290 -(138 + 557)))>=(2539 -(1363 + 436))) and (v244==0)) then v143=v88[388 -(206 + 180)];v144=v86[v88[2 + 1]];v244=3 -2;end end end if ((v211==(1 -0)) or ((16353 -12115)>((19726 -10291) -4998))) then v142=1;break;end end end if (((2691 -1780)==(2523 -(147 + 1465))) and (v142==(904 -(731 + 172)))) then v86[v143 + 1]=v144;v86[v143]=v144[v88[3 + 1]];break;end end break;end end end elseif (((2562 -(1297 + 108))==(1504 -(124 + 223))) and (v89==18)) then do return;end else v71=v88[1043 -(598 + 442)];end elseif ((v89<=21) or ((237 + 2492)>=(17227 -12660))) then if ((v89==(9 + 11)) or ((6256 -4336)<=(4189 -3060))) then local v145=0;local v146;local v147;local v148;local v149;local v150;while true do if ((v145==(5 -3)) or ((5847 -(104 + 1894))<(394 -261))) then local v189=0;while true do if (((227 + 272)==(49 + 450)) and (v189==((0 -0) + 0 + 0))) then for v227=(1738 -(1546 + 188)) -3,v147 do v86[v148 + v227]=v149[v227];end v150=v149[1 + 0];v189=1 + 0;end if ((v189==(1 + 0)) or (1433<=(1328 -(148 + 1021)))) then v145=3;break;end end end if (((3716 -(47 + 532))>=((1159 + 2699) -(1143 + 518))) and (v145==(0 -0))) then local v190=0 + 0;while true do if ((471>(300 -74)) and (v190==(0 -0))) then v146=v88[4 -2];v147=v88[626 -(564 + 58)];v190=1;end if (((1 + 0)==v190) or ((1440 -(514 + 415))>(1091 + 750))) then v145=1 -0;break;end end end if ((v145==(2000 -(1254 + 743))) or (((2664 -(32 + 360)) + 775)>=3697)) then if (v150 or ((392 + 3570)<=(2671 -(66 + 28)))) then local v206=0;while true do if ((3774<4650) and ((0 + 0)==v206)) then v86[v148]=v150;v71=v88[2 + 1];break;end end else v71=v71 + 1;end break;end if (((3618 + 382)<=4885) and ((1 -0)==v145)) then local v191=1856 -(1290 + 324 + 242);while true do if ((v191==0) or ((4341 -(223 + 1060))==(4836 + 1))) then v148=v146 + 2;v149={v86[v146](v86[v146 + 1],v86[v148])};v191=927 -(277 + 649);end if ((3717>(208 + 197)) and (v191==(1409 -(807 + 601)))) then v145=5 -(8 -5);break;end end end end else v86[v88[1179 -(1054 + 123)]]=v86[v88[3]][v88[1269 -(224 + 1041)]];end elseif ((v89>(671 -(390 + 259))) or ((8044 -5149)==4905)) then v86[v88[1 + 1]]=v88[570 -(158 + 409)];else v36[v88[3]]=v86[v88[5 -3]];end elseif ((v89<=(1605 -(707 + 871))) or ((5507 -(166 + (1719 -(251 + 1044))))<=539)) then if ((v89<=(22 + 3)) or ((2353 + 2119)==(895 + 223))) then if (((66 + 1948)==(3479 -(1397 + 68))) and (v89==24)) then local v154=0 + 0;local v155;local v156;while true do if (((6161 -1941)>=(1977 -(106 + 629))) and (v154==((393 -(328 + 64)) + 0))) then for v201=1 + 0, #v85 do local v202=1039 -(146 + 35 + 858);local v203;local v204;local v205;while true do if (((229 -94)<(603 + 334)) and ((1 -(592 -(461 + 131)))==v202)) then v205=nil;while true do if ((v203==(1276 -(974 + 301))) or (2245<((4503 -(126 + 1655)) -(578 + 137)))) then while true do if ((v204==0) or ((2910 -(1170 + 695 + 23))>=(3674 -(16 + 1037)))) then v205=v85[v201];for v259=646 -(425 + 221), #v205 do local v260=1850 -(529 + 1321);local v261;local v262;local v263;local v264;while true do if ((((16204 -11371) -(205 + (2639 -1152)))<(2970 + 1198)) and (v260==(0 -0))) then v261=0 + 0;v262=nil;v260=(4930 -3344) -(249 + 1336);end if ((v260==(1 + 0 + 0)) or ((3725 -(6 + 146))==((6945 -(430 + 1117)) -(886 + 812)))) then v263=nil;v264=nil;v260=179 -(160 + 9 + 8);end if ((v260==(6 -4)) or ((608 + 28)>=(997 + 2008))) then while true do if ((v261==(1666 -(528 + 1137))) or ((13029 -10003)<=(7041 -4362))) then v264=v262[156 -(24 + 130)];if (((v263==v86) and (v264>=v155)) or (1237>=(1923 + 1922))) then local v273=633 -(64 + 569);local v274;local v275;while true do if (((266 + 950)<=(7534 -4017)) and (0==v273)) then v274=0 -0;v275=nil;v273=1;end if (((3741 -1382)==(2849 -(261 + 229))) and (v273==(1 -0))) then while true do if ((((5710 -(311 + 434)) -2851)>=907) and (v274==(1536 -(1489 + 47)))) then v275=0;while true do if ((v275==0) or ((9640 -5370)<=4222)) then v156[v264]=v263[v264];v262[1 -0]=v156;break;end end break;end end break;end end end break;end if ((v261==0) or ((805 -200)>(3632 -(643 + 9)))) then v262=v205[v259];v263=v262[2 -1];v261=1;end end break;end end end break;end end break;end if (((447 + 236)==(1669 -(102 + 884))) and (v203==(0 -0))) then v204=0 -0;v205=nil;v203=1;end end break;end if ((v202==(0 + 0)) or (4769<(291 + 805))) then v203=0;v204=nil;v202=1 -(0 + 0);end end end break;end if ((v154==(929 -(600 + 329))) or ((10511 -7824)>=(5598 -(75 + 634 + 819)))) then v155=v88[1336 -(108 + (3653 -2427))];v156={};v154=1698 -(787 + 910);end end else local v157=1009 -(478 + 531);local v158;local v159;local v160;local v161;local v162;while true do if ((v157==((4 -3) + (0 -0))) or ((2963 + 948)<(11956 -8126))) then v160=nil;v161=nil;v157=306 -(288 + 16);end if (((5931 -(1446 + 432))>3960) and (v157==0)) then v158=0;v159=nil;v157=1 + (0 -0);end if ((v157==(73 -(40 + 31))) or (359>1471)) then v162=nil;while true do if (((1927 -(487 + 792))>200) and (v158==0)) then local v214=0 + 0;while true do if ((v214==(985 -(743 + 241))) or ((9695 -4975)<(1036 + 2877))) then v158=325 -(279 + 45);break;end if ((1292==((2797 -(725 + 995)) + 215)) and (v214==(1807 -(1614 + 193)))) then v159=1260 -(153 + 1107);v160=nil;v214=1 + 0;end end end if (((575 -(526 + (1342 -(447 + 847))))==v158) or ((4763 -(98 + 19))<(234 + 17))) then local v215=1411 -(1133 + 278);while true do if ((v215==(1 + 0)) or (598>=(10892 -7115))) then v158=3 -1;break;end if ((1834<(1058 + 3412)) and ((0 + 0)==v215)) then v161=nil;v162=nil;v215=3 -2;end end end if ((v158==(1 + 1)) or (1819<=(2616 -(1083 + 91)))) then while true do if ((324==(1198 -(737 + 137))) and (v159==(0 -0))) then local v245=1976 -(1664 + 312);while true do if ((((22835 -16628) -(3320 + 379))<(6188 -3072)) and (v245==(1 -0))) then v159=2 -1;break;end if ((v245==(0 + 0)) or ((2887 -(915 + 369))<=(153 + (1476 -(290 + 333))))) then v160=v88[136 -(44 + 90)];v161={v86[v160](v12(v86,v160 + (2 -1),v72))};v245=1 -0;end end end if ((v159==1) or ((6565 -4693)>=(4789 -1657))) then v162=0 -(0 + 0);for v248=v160,v88[(9 -6) + 1] do local v249=0 + 0;while true do if (((2773 -(637 + 585))<(7873 -(11186 -7435))) and (v249==(0 -0))) then v162=v162 + ((1 + 0) -0);v86[v248]=v161[v162];break;end end end break;end end break;end end break;end end end elseif (((462 + 3811)>(1129 + 1689)) and (v89==((562 + 714) -(670 + 580)))) then v37[v88[519 -(327 + 189)]]=v86[v88[1560 -(97 + 1461)]];else local v164=0 + 0;local v165;local v166;local v167;local v168;while true do if (((2560 + 2298)>(15409 -11033)) and (v164==(2 -1))) then local v192=457 -(120 + 337);while true do if ((v192==(0 -0)) or ((1948 -(85 + 1526))>=2833)) then v167=nil;v168=nil;v192=1;end if (((4862 -(705 + 338))>=2961) and (v192==(1 -(0 -0)))) then v164=5 -3;break;end end end if ((0==v164) or ((6460 -(579 + 1174))==(2945 -(4848 -3201)))) then v165=0 + 0;v166=nil;v164=1 + 0;end if (((2923 -(1009 + 232))>589) and (v164==2)) then while true do if (((1 + 0)==v165) or (4776==1566)) then v168=v88[2 + 1];for v229=1315 -(614 + 700),v168 do v167[v229]=v86[v166 + v229];end break;end if ((v165==(896 -(131 + 765))) or (4622<=(909 -634))) then local v216=0 -0;local v217;while true do if ((0==v216) or (1560>(985 + 1989))) then v217=0;while true do if ((v217==(0 -0)) or ((103 + 3 + 836)==(2297 -(762 + (1932 -(874 + 728)))))) then local v254=0 -0;while true do if ((v254==1) or ((2054 -(11 + 395))>=(1176 + 568))) then v217=1;break;end if ((v254==(0 + 0)) or ((155 + 45)>=(12175 -7470))) then v166=v88[2];v167=v86[v166];v254=1 + 0;end end end if ((v217==(1 + 0)) or ((17036 -12750)<=(5306 -((1702 -1114) + 467)))) then v165=2 -1;break;end end break;end end end end break;end end end elseif (((880 -(76 + 200))<(7232 -(5003 -2558))) and (v89<=(1979 -(842 + 1108)))) then if ((1918>(1680 -1104)) and (v89==(28 + 0))) then v86[v88[(2 + 0) -0]]=v37[v88[6 -3]];else local v170=793 -(376 + 417);local v171;local v172;local v173;while true do if ((2585==(9225 -6640)) and ((189 -(29 + 160))==v170)) then v171=1610 -((2601 -1641) + 650);v172=nil;v170=1 + 0;end if ((v170==(1 -0)) or (((9649 + 458) -5523)<330)) then v173=nil;while true do if (((1796 -1025)<(2389 + 775 + (2099 -769))) and (v171==(0 + 0))) then local v218=0;while true do if ((v218==1) or (1882>=2547)) then v171=1 + 0;break;end if ((v218==0) or ((3554 + 1309)<(5815 -3716))) then v172=v88[2];v173=v86[v172];v218=174 -(12 + 161);end end end if ((v171==(1127 -(566 + 560))) or ((3964 + 96)<(1320 + 1320))) then for v231=v172 + (282 -(120 + 161)),v88[(818 -(597 + 218)) + (1684 -(120 + 1564))] do v7(v173,v86[v231]);end break;end end break;end end end elseif ((v89==(79 -49)) or (4314<=(1909 -(1191 + 373)))) then for v178=v88[3 -1],v88[2 + 1] do v86[v178]=nil;end else v86[v88[2]][v88[3]]=v88[4];end v71=v71 + (440 -(34 + 405));break;end if ((v92==(0 -0)) or ((6524 -3213)<=((2222 + 466) -(286 + 344)))) then v88=v79[v71];v89=v88[3 -2];v92=(1580 -(566 + 1013)) + 0;end end end end v70=3;end if (v70==3) then A,B=v27(v10(v75));if  not A[1] then local v90=v35[4][v71] or "?";error("Script error at ["   .. v90   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v70==1) then v73={...};v74=v11("#",...) -1;v70=2;end end end;end return v29(v28(),{},v16)();end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end end end vv8());end